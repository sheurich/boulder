// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/cactus/go-statsd-client/statsd (interfaces: Statter)

package metrics

import (
	gomock "github.com/golang/mock/gomock"
	time "time"
)

// Mock of Statter interface
type MockStatter struct {
	ctrl     *gomock.Controller
	recorder *_MockStatterRecorder
}

// Recorder for MockStatter (not exported)
type _MockStatterRecorder struct {
	mock *MockStatter
}

func NewMockStatter(ctrl *gomock.Controller) *MockStatter {
	mock := &MockStatter{ctrl: ctrl}
	mock.recorder = &_MockStatterRecorder{mock}
	return mock
}

func (_m *MockStatter) EXPECT() *_MockStatterRecorder {
	return _m.recorder
}

func (_m *MockStatter) Close() error {
	ret := _m.ctrl.Call(_m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockStatterRecorder) Close() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Close")
}

func (_m *MockStatter) Dec(_param0 string, _param1 int64, _param2 float32) error {
	ret := _m.ctrl.Call(_m, "Dec", _param0, _param1, _param2)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockStatterRecorder) Dec(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Dec", arg0, arg1, arg2)
}

func (_m *MockStatter) Gauge(_param0 string, _param1 int64, _param2 float32) error {
	ret := _m.ctrl.Call(_m, "Gauge", _param0, _param1, _param2)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockStatterRecorder) Gauge(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Gauge", arg0, arg1, arg2)
}

func (_m *MockStatter) GaugeDelta(_param0 string, _param1 int64, _param2 float32) error {
	ret := _m.ctrl.Call(_m, "GaugeDelta", _param0, _param1, _param2)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockStatterRecorder) GaugeDelta(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GaugeDelta", arg0, arg1, arg2)
}

func (_m *MockStatter) Inc(_param0 string, _param1 int64, _param2 float32) error {
	ret := _m.ctrl.Call(_m, "Inc", _param0, _param1, _param2)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockStatterRecorder) Inc(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Inc", arg0, arg1, arg2)
}

func (_m *MockStatter) Raw(_param0 string, _param1 string, _param2 float32) error {
	ret := _m.ctrl.Call(_m, "Raw", _param0, _param1, _param2)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockStatterRecorder) Raw(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Raw", arg0, arg1, arg2)
}

func (_m *MockStatter) Set(_param0 string, _param1 string, _param2 float32) error {
	ret := _m.ctrl.Call(_m, "Set", _param0, _param1, _param2)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockStatterRecorder) Set(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Set", arg0, arg1, arg2)
}

func (_m *MockStatter) SetInt(_param0 string, _param1 int64, _param2 float32) error {
	ret := _m.ctrl.Call(_m, "SetInt", _param0, _param1, _param2)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockStatterRecorder) SetInt(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetInt", arg0, arg1, arg2)
}

func (_m *MockStatter) SetPrefix(_param0 string) {
	_m.ctrl.Call(_m, "SetPrefix", _param0)
}

func (_mr *_MockStatterRecorder) SetPrefix(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetPrefix", arg0)
}

func (_m *MockStatter) Timing(_param0 string, _param1 int64, _param2 float32) error {
	ret := _m.ctrl.Call(_m, "Timing", _param0, _param1, _param2)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockStatterRecorder) Timing(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Timing", arg0, arg1, arg2)
}

func (_m *MockStatter) TimingDuration(_param0 string, _param1 time.Duration, _param2 float32) error {
	ret := _m.ctrl.Call(_m, "TimingDuration", _param0, _param1, _param2)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockStatterRecorder) TimingDuration(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "TimingDuration", arg0, arg1, arg2)
}
