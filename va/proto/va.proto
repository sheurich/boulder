syntax = "proto2";

package va;
option go_package = "proto";

import "core/proto/core.proto";

service VA {
	rpc PerformValidation(PerformValidationRequest) returns (ValidationResult) {}
}

service CAA {
	rpc IsCAAValid(IsCAAValidRequest) returns (IsCAAValidResponse) {}
}

message IsCAAValidRequest {
	// NOTE: Domain may be a name with a wildcard prefix (e.g. `*.example.com`)
	optional string domain = 1;
	optional string validationMethod = 2;
	optional int64 accountURIID = 3;
}

// If CAA is valid for the requested domain, the problem will be empty
message IsCAAValidResponse {
	optional core.ProblemDetails problem = 1;
}

message PerformValidationRequest {
	optional string domain = 1;
	optional core.Challenge challenge = 2;
	optional AuthzMeta authz = 3;
}

message AuthzMeta {
	optional string id = 1;
	optional int64 regID = 2;
}

message ValidationResult {
	repeated core.ValidationRecord records = 1;
	optional core.ProblemDetails problems = 2;
}
