language: go
dist: focal
os: linux

go:
  - "1.15.7"

go_import_path: github.com/letsencrypt/boulder

services:
  - docker

# Only build pushes to the main branch, PRs, and branches beginning with
# `test-`. You should not push branches beginning with `test-` to the
# letsencrypt repository, but this is a convenient way to push branches to your
# own fork of the repository to ensure Travis passes before submitting a PR.
# For instance, you might run:
# git push myremote branchname:test-branchname
branches:
  only:
    - main
    - /^test-.*$/

env:
    # Run ./test.sh --help for a description of each of the flags
    - TESTFLAGS="--lints --integration --generate --rpm"
    # Config changes that have landed in main but not yet been applied to
    # production can be made in boulder-config-next.json.
    - TESTFLAGS="--integration" OVERRIDES="-f docker-compose.yml -f docker-compose.next.yml"
    - TESTFLAGS="--unit --enable-race-detection"
    - TESTFLAGS="--unit --enable-race-detection" OVERRIDES="-f docker-compose.yml -f docker-compose.next.yml"
    - TESTFLAGS="--start-py"
    # gomod-vendor runs with a separate container because it needs to fetch
    # packages from GitHub et. al., which is incompatible with the DNS server
    # override in the boulder container (used for service discovery).
    - TESTFLAGS="--gomod-vendor" CONTAINER="netaccess"
    - TESTFLAGS="--coverage" CONTAINER="netaccess"

jobs:
  fast_finish: true
  allow_failures:
    - env: TESTFLAGS="--coverage" CONTAINER="netaccess"

before_script:
  # This user is stored in the TravisCI repository settings in the UI As
  # of 2021-01-20 it is a read-only user in DockerHub but is used to
  # bypass rate limits imposed by DockerHub to non-authenticated
  # non-paying users.
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin || true
  - docker-compose pull

script:
  - >-
    docker-compose ${OVERRIDES} run --use-aliases
    -e TRAVIS_BRANCH
    -e TRAVIS_JOB_ID
    -e TRAVIS_PULL_REQUEST
    -e COVERALLS_TOKEN
    ${CONTAINER:-boulder} ./test.sh ${TESTFLAGS}
