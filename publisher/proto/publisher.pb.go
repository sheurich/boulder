// Code generated by protoc-gen-go. DO NOT EDIT.
// source: publisher.proto

package publisher

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Request struct {
	Der                  []byte   `protobuf:"bytes,1,opt,name=der" json:"der,omitempty"`
	LogURL               *string  `protobuf:"bytes,2,opt,name=LogURL" json:"LogURL,omitempty"`
	LogPublicKey         *string  `protobuf:"bytes,3,opt,name=LogPublicKey" json:"LogPublicKey,omitempty"`
	Precert              *bool    `protobuf:"varint,4,opt,name=precert" json:"precert,omitempty"`
	StoreSCT             *bool    `protobuf:"varint,5,opt,name=storeSCT" json:"storeSCT,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_41489454d08668ce, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetDer() []byte {
	if m != nil {
		return m.Der
	}
	return nil
}

func (m *Request) GetLogURL() string {
	if m != nil && m.LogURL != nil {
		return *m.LogURL
	}
	return ""
}

func (m *Request) GetLogPublicKey() string {
	if m != nil && m.LogPublicKey != nil {
		return *m.LogPublicKey
	}
	return ""
}

func (m *Request) GetPrecert() bool {
	if m != nil && m.Precert != nil {
		return *m.Precert
	}
	return false
}

func (m *Request) GetStoreSCT() bool {
	if m != nil && m.StoreSCT != nil {
		return *m.StoreSCT
	}
	return false
}

type Result struct {
	Sct                  []byte   `protobuf:"bytes,1,opt,name=sct" json:"sct,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_41489454d08668ce, []int{1}
}

func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

func (m *Result) GetSct() []byte {
	if m != nil {
		return m.Sct
	}
	return nil
}

func init() {
	proto.RegisterType((*Request)(nil), "Request")
	proto.RegisterType((*Result)(nil), "Result")
}

func init() { proto.RegisterFile("publisher.proto", fileDescriptor_41489454d08668ce) }

var fileDescriptor_41489454d08668ce = []byte{
	// 207 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x8f, 0x31, 0x4f, 0x86, 0x30,
	0x10, 0x86, 0xad, 0x9f, 0x7e, 0xc0, 0x85, 0x44, 0xd3, 0xc1, 0x34, 0x9d, 0x48, 0x27, 0x26, 0x12,
	0xfd, 0x01, 0x2e, 0x8c, 0x32, 0x90, 0x82, 0x71, 0xa7, 0x5e, 0xa0, 0x09, 0x5a, 0x6c, 0xaf, 0x83,
	0x3f, 0xc2, 0xff, 0x6c, 0x40, 0x30, 0xf9, 0xb6, 0x7b, 0xde, 0x37, 0x77, 0x79, 0x0e, 0xee, 0x96,
	0x38, 0xcc, 0x36, 0x4c, 0xe8, 0xab, 0xc5, 0x3b, 0x72, 0xea, 0x87, 0x41, 0xa2, 0xf1, 0x2b, 0x62,
	0x20, 0x7e, 0x0f, 0xa7, 0x77, 0xf4, 0x82, 0x15, 0xac, 0xcc, 0xf5, 0x3a, 0xf2, 0x07, 0x38, 0x37,
	0x6e, 0x7c, 0xd5, 0x8d, 0xb8, 0x2e, 0x58, 0x99, 0xe9, 0x9d, 0xb8, 0x82, 0xbc, 0x71, 0x63, 0xbb,
	0xde, 0x32, 0x2f, 0xf8, 0x2d, 0x4e, 0x5b, 0x7b, 0x91, 0x71, 0x01, 0xc9, 0xe2, 0xd1, 0xa0, 0x27,
	0x71, 0x53, 0xb0, 0x32, 0xd5, 0x07, 0x72, 0x09, 0x69, 0x20, 0xe7, 0xb1, 0xab, 0x7b, 0x71, 0xbb,
	0x55, 0xff, 0xac, 0x24, 0x9c, 0x35, 0x86, 0x38, 0x6f, 0x36, 0xc1, 0xd0, 0x61, 0x13, 0x0c, 0x3d,
	0x3d, 0x43, 0xd6, 0x1e, 0xfa, 0xfc, 0x11, 0x64, 0x17, 0x87, 0x0f, 0x4b, 0xbd, 0xeb, 0xec, 0xe7,
	0x38, 0x63, 0xdd, 0xbf, 0x59, 0x9a, 0xf6, 0xe5, 0xb4, 0xda, 0x9f, 0x92, 0x49, 0xf5, 0x17, 0xa9,
	0xab, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x32, 0x17, 0x12, 0x9f, 0xfd, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PublisherClient is the client API for Publisher service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PublisherClient interface {
	SubmitToSingleCTWithResult(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Result, error)
}

type publisherClient struct {
	cc *grpc.ClientConn
}

func NewPublisherClient(cc *grpc.ClientConn) PublisherClient {
	return &publisherClient{cc}
}

func (c *publisherClient) SubmitToSingleCTWithResult(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/Publisher/SubmitToSingleCTWithResult", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PublisherServer is the server API for Publisher service.
type PublisherServer interface {
	SubmitToSingleCTWithResult(context.Context, *Request) (*Result, error)
}

// UnimplementedPublisherServer can be embedded to have forward compatible implementations.
type UnimplementedPublisherServer struct {
}

func (*UnimplementedPublisherServer) SubmitToSingleCTWithResult(ctx context.Context, req *Request) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmitToSingleCTWithResult not implemented")
}

func RegisterPublisherServer(s *grpc.Server, srv PublisherServer) {
	s.RegisterService(&_Publisher_serviceDesc, srv)
}

func _Publisher_SubmitToSingleCTWithResult_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublisherServer).SubmitToSingleCTWithResult(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Publisher/SubmitToSingleCTWithResult",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublisherServer).SubmitToSingleCTWithResult(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _Publisher_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Publisher",
	HandlerType: (*PublisherServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SubmitToSingleCTWithResult",
			Handler:    _Publisher_SubmitToSingleCTWithResult_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "publisher.proto",
}
