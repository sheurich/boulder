---
# Network Policies for Boulder Kubernetes Deployment
# Replicates the three-network architecture from docker-compose:
# - bouldernet (10.77.77.0/24): Internal microservices communication
# - publicnet (64.112.117.0/25): HTTP-01 challenge validation
# - publicnet2 (64.112.117.128/25): TLS-ALPN-01 challenge validation

# Default deny-all policy for the boulder-test namespace
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-all
  namespace: boulder-test
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---
# Internal Network Policy - Boulder Microservices Communication
# Allows all Boulder services to communicate with each other and infrastructure
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: boulder-internal-network
  namespace: boulder-test
  labels:
    network-segment: internal
    network-cidr: "10.77.77.0/24"
spec:
  podSelector:
    matchLabels:
      network-segment: internal
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow communication from other Boulder services
  - from:
    - podSelector:
        matchLabels:
          network-segment: internal
  # Allow DNS resolution from kube-system
  - from:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  egress:
  # Allow communication to other Boulder services
  - to:
    - podSelector:
        matchLabels:
          network-segment: internal
  # Allow DNS resolution to kube-system
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  # Allow external CT log submission (Publisher service)
  - to: []
    ports:
    - protocol: TCP
      port: 443
  # Allow OCSP responder communication
  - to: []
    ports:
    - protocol: TCP
      port: 80

---
# Public Network 1 Policy - HTTP-01 Challenge Validation
# Equivalent to publicnet (64.112.117.0/25) in docker-compose
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: boulder-public-network-1
  namespace: boulder-test
  labels:
    network-segment: public1
    network-cidr: "64.112.117.0/25"
spec:
  podSelector:
    matchLabels:
      network-segment: public1
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow HTTP-01 challenge traffic from anywhere
  - ports:
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 443
  # Allow HTTPS traffic for HTTP->HTTPS redirect testing
  - ports:
    - protocol: TCP
      port: 443
  # Allow communication from internal Boulder services
  - from:
    - podSelector:
        matchLabels:
          network-segment: internal
  # Allow ACME protocol traffic (WFE2)
  - ports:
    - protocol: TCP
      port: 4001
  # Allow management interface
  - from:
    - podSelector:
        matchLabels:
          network-segment: internal
    ports:
    - protocol: TCP
      port: 8055
  egress:
  # Allow communication to internal Boulder services
  - to:
    - podSelector:
        matchLabels:
          network-segment: internal
  # Allow DNS resolution
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  # Allow outbound HTTP/HTTPS for challenge resolution
  - to: []
    ports:
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 443

---
# Public Network 2 Policy - TLS-ALPN-01 Challenge Validation
# Equivalent to publicnet2 (64.112.117.128/25) in docker-compose
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: boulder-public-network-2
  namespace: boulder-test
  labels:
    network-segment: public2
    network-cidr: "64.112.117.128/25"
spec:
  podSelector:
    matchLabels:
      network-segment: public2
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow TLS-ALPN-01 challenge traffic from anywhere
  - ports:
    - protocol: TCP
      port: 443
  # Allow HTTP traffic for testing
  - ports:
    - protocol: TCP
      port: 80
  # Allow TLS-ALPN-01 specific port
  - ports:
    - protocol: TCP
      port: 5001
  # Allow communication from internal Boulder services
  - from:
    - podSelector:
        matchLabels:
          network-segment: internal
  # Allow DNS challenge ports
  - ports:
    - protocol: UDP
      port: 8053
    - protocol: UDP
      port: 8054
  # Allow DoH challenge ports
  - ports:
    - protocol: TCP
      port: 8343
    - protocol: TCP
      port: 8443
  egress:
  # Allow communication to internal Boulder services
  - to:
    - podSelector:
        matchLabels:
          network-segment: internal
  # Allow DNS resolution
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  # Allow outbound traffic for challenge validation
  - to: []
    ports:
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 5001

---
# Infrastructure Services Policy - Database, Redis, Consul, etc.
# These services are part of the internal network but need special consideration
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: boulder-infrastructure-services
  namespace: boulder-test
  labels:
    network-segment: infrastructure
spec:
  podSelector:
    matchLabels:
      app-type: infrastructure
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow connections from Boulder services
  - from:
    - podSelector:
        matchLabels:
          network-segment: internal
  - from:
    - podSelector:
        matchLabels:
          network-segment: public1
  - from:
    - podSelector:
        matchLabels:
          network-segment: public2
  egress:
  # Allow DNS resolution
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  # Allow communication between infrastructure services
  - to:
    - podSelector:
        matchLabels:
          app-type: infrastructure

---
# External Access Policy - Services that need external connectivity
# For services like Jaeger UI, PKI Metal web interface, etc.
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: boulder-external-access
  namespace: boulder-test
  labels:
    network-segment: external-access
spec:
  podSelector:
    matchLabels:
      external-access: "true"
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow external access to web interfaces
  - ports:
    - protocol: TCP
      port: 16686  # Jaeger UI
    - protocol: TCP
      port: 8080   # PKI Metal UI
    - protocol: TCP
      port: 8500   # Consul UI
  # Allow internal access from Boulder services
  - from:
    - podSelector:
        matchLabels:
          network-segment: internal
  egress:
  # Allow all egress for these services
  - {}